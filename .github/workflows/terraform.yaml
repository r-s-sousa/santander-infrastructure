name: Terraform

env:
  GIT_CREDENTIALS: ${{ secrets.GIT_CREDENTIALS }}
  TERRAFORM_BACKEND_AWS_S3_BUCKET: santander-infrastructure-state-bucket-${{ inputs.environment }}
  TERRAFORM_BACKEND_AWS_S3_KEY: terraform.tfstate
  TERRAFORM_BACKEND_AWS_DYNAMODB_TABLE: terraform-state-lock

on:
  workflow_call:
    inputs:
      aws-account-id:
        required: true
        type: string
      environment:
        required: true
        type: string
      deployment:
        required: true
        type: boolean
        default: false

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  continuous_integration:
    environment: ${{ inputs.environment }}
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::${{ inputs.aws-account-id }}:role/github-actions-${{ inputs.environment }}

      - name: Dependencies
        id: dependencies
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt install terraform
          sudo apt-get update --fix-missing
          sudo apt-get install jq

      - name: Terraform Provider
        run: |
          cat <<EOF > terraform.tf
          terraform {
            backend "s3" {
              bucket         = "${TERRAFORM_BACKEND_AWS_S3_BUCKET}"
              encrypt        = true
              key            = "${TERRAFORM_BACKEND_AWS_S3_KEY}"
              dynamodb_table = "${TERRAFORM_BACKEND_AWS_DYNAMODB_TABLE}"
              region         = "us-east-1"
            }
          }
          EOF
          cat -n terraform.tf
        working-directory: infrastructure

      - name: Terraform Init
        id: init
        run: |
          git config --global url."https://${GIT_CREDENTIALS}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
          terraform init
        working-directory: infrastructure

      - name: Terraform Fmt
        id: fmt
        run: |
          terraform fmt -check
        working-directory: infrastructure

      - name: Terraform Validate
        id: validate
        run: |
          terraform validate -no-color
        working-directory: infrastructure

      - name: Terraform Plan
        continue-on-error: true
        if: ${{ inputs.mode }} == "plan"
        id: plan
        run: |
          terraform plan -no-color -input=false -var-file="environments/${{ inputs.environment }}/terraform.tfvars"
        working-directory: infrastructure

      - name: Terraform Plan Status
        continue-on-error: true
        if: steps.plan.outcome == 'failure'
        run: exit 1

  continuous_deployment:
    environment: ${{ inputs.environment }}
    if: ${{ inputs.deployment && always() && contains(join(needs.*.result, ','), 'success') }}
    name: Continuous Deployment
    needs: continuous_integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::${{ inputs.aws-account-id }}:role/github-actions-${{ inputs.environment }}

      - name: Dependencies
        id: dependencies
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt install terraform
          sudo apt-get update --fix-missing
          sudo apt-get install jq

      - name: Terraform Provider
        run: |
          cat <<EOF > terraform.tf
          terraform {
            backend "s3" {
              bucket         = "${TERRAFORM_BACKEND_AWS_S3_BUCKET}"
              encrypt        = true
              key            = "${TERRAFORM_BACKEND_AWS_S3_KEY}"
              dynamodb_table = "${TERRAFORM_BACKEND_AWS_DYNAMODB_TABLE}"
              region         = "us-east-1"
            }
          }
          EOF
          cat -n terraform.tf
        working-directory: infrastructure

      - name: Terraform Init
        id: init
        run: |
          git config --global url."https://${GIT_CREDENTIALS}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
          terraform init
        working-directory: infrastructure

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve -input=false -var-file="environments/${{ inputs.environment }}/terraform.tfvars"
        # env:
        #   TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
        #   TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
        working-directory: infrastructure
